
version: "3.8"
services:

  consul-server:
    image: hashicorp/consul:latest
    container_name: consul-server
    restart: unless-stopped
    volumes:
      - ./server.json:/consul/config/server.json:ro
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: "agent"

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9094:9094'
    restart: unless-stopped
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=BROKER://kafka:9092,CONTROLLER://kafka:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=BROKER://kafka:9092,EXTERNAL://127.0.0.1:9094
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=BROKER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8082:8082"
    restart: unless-stopped
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - SERVER_PORT=8082
    depends_on:
      - kafka

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=pipe_of_gandalf

  adminer:
    image: adminer:latest
    container_name: adminer
    ports:
      - "8181:8080"
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    restart: unless-stopped
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka

  core-service:
    image: core-service:0.0.1-SNAPSHOT
    restart: unless-stopped
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=pipe_of_gandalf
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - SPRING_CLOUD_CONSUL_HOST=consul-server
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      - postgres
      - kafka
      - gateway-service

  gateway-service:
    image: gateway-service:0.0.1-SNAPSHOT
    container_name: gateway-service
    ports:
      - "8083:8083"
    restart: unless-stopped
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - SPRING_CLOUD_CONSUL_HOST=consul-server
    depends_on:
      - kafka
      - consul-server

  purchase-order-service:
    image: purchase-order-service:0.0.1-SNAPSHOT
    restart: unless-stopped
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - SPRING_CLOUD_CONSUL_HOST=consul-server
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      - redis
      - kafka
      - gateway-service

  notification-service:
    image: notification-service:0.0.1-SNAPSHOT
    container_name: notification-service
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - SPRING_CLOUD_CONSUL_HOST=consul-server
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8899
    depends_on:
      - config-service
      - gateway-service
      - kafka

  config-service:
    image: config-service:0.0.1-SNAPSHOT
    container_name: config-service
    restart: unless-stopped
    ports:
      - "8899:8899"
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - SPRING_CLOUD_CONSUL_HOST=consul-server
    depends_on:
      - consul-server
      - kafka